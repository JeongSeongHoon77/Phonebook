#include <iostream>
#include <string>
#include <map>

using namespace std;

class Phonebook {
public:
	map<string, string> phonebook;
	map<string, string>::iterator it;
	map<string, string> relationship;;
	map<string, string>::iterator it2;
	map<string, string> addressbook;
	map<string, string> banbook;
	map<string, string>::iterator it3;
	string name, number, r, address;

public:
	void addp();
	void addr();
	void addaddress();
	void search();
	void searcha();
	void pop();
	void change();
	void show();
	void showr();
	void showb();
	void plusban();
	void minusban();
};

void Phonebook::addp() {
	cout << endl << "추가하고 싶은 이름을 입력하세요." << endl;
	cin >> name;
	if (phonebook.find(name) == phonebook.end()) {
		cout << "전화번호를 입력하세요." << endl;
		cin >> number;
		phonebook.insert(make_pair(name, number));
		cout << name << " 님의 전화번호를 저장했습니다." << endl << endl;
		addr();
		addaddress();
	}
	else
		cout << "입력하신 이름이 이미 전화번호부에 존재합니다." << endl;

}

void Phonebook::addr() {
	int a;
	cout << endl << name << " 님과의 관계를 저장하시겠습니까?" << endl;
	cout << "1. 입력" << endl << "2. 건너뛰기" << endl;
	cin >> a;
	if (a == 1) {
		cout << "사용자와의 관계를 입력하세요 (가족, 친구, 동료 중 하나를 입력하세요)" << endl;
		cin >> r;
		while (r != "가족" && r != "친구" && r != "동료" && r != "없음") {
			cout << "잘못 입력하셨습니다." << endl;
			cout << "사용자와의 관계를 입력하세요 (가족, 친구, 동료 중 하나를 입력하세요)" << endl;
			cin >> r;
		}
		relationship.insert(make_pair(name, r));
		cout << name << " 님과의 관계를 " << r << "(으)로 저장했습니다." << endl;
	}
	else {
		relationship.insert(make_pair(name, "없음"));
		cout << name << " 님과의 관계는 '없음'으로 저장했습니다." << endl;
	}
}

void Phonebook::addaddress() {
	int a;
	cout << endl << name << " 님의 주소를 저장하시겠습니까?" << endl;
	cout << "1. 입력" << endl << "2. 건너뛰기" << endl;
	cin >> a;
	if (a == 1) {
		cout << name << " 님의 주소를 입력해 주세요.(띄어쓰기를 하지 않고 입력해 주세요)" << endl;
		cin >> address;
		addressbook.insert(make_pair(name, address));
		cout << name << " 님의 주소를 " << address << " 로 저장했습니다." << endl;
	}
	else {
		addressbook.insert(make_pair(name, "없음"));
		cout << name << " 님의 주소는 저장하지 않았습니다." << endl;
	}
}

void Phonebook::search() {
	cout << endl << "전화번호를 찾고 싶은 사람의 이름을 입력하세요." << endl;
	cin >> name;
	if (phonebook.find(name) == phonebook.end())
		cout << "입력하신 이름은 전화번호부에 없습니다." << endl;
	else
		cout << name << " 님의 전화번호는 " << phonebook[name] << " 입니다." << endl << endl;
}

void Phonebook::searcha() {
	cout << endl << "주소를 찾고 싶은 사람의 이름을 입력하세요." << endl;
	cin >> name;
	if (phonebook.find(name) == phonebook.end())
		cout << "입력하신 이름은 전화번호부에 없습니다." << endl << endl;
	else if (addressbook[name]=="없음")
		cout << "입력하신 이름은 주소가 저장되어 있지 않습니다." << endl << endl;
	else
		cout << name << " 님의 주소는 " << addressbook[name] << " 입니다." << endl << endl;
}

void Phonebook::pop() {
	cout << endl << "삭제하고 싶은 번호의 이름을 입력하세요." << endl;
	cin >> name;
	if (phonebook.find(name) == phonebook.end()) 
		cout << "입력하신 이름은 전화번호부에 없습니다." << endl;
	else {
		phonebook.erase(name);
		cout << name << " 님의 번호는 삭제되었습니다." << endl;
	}
}

void Phonebook::change() {
	cout << endl << "전화번호를 바꾸고 싶은 사람의 이름을 입력하세요." << endl;
	cin >> name;
	if (phonebook.find(name) == phonebook.end()) 
		cout << "입력하신 이름은 전화번호부에 없습니다." << endl;
	else {
		phonebook.erase(name);
		cout << "새로운 전화번호를 입력하세요." << endl;
		cin >> number;
		phonebook.insert(make_pair(name, number));
		cout << name << "님의 전화번호를 " << number << "로 변경하였습니다." << endl;
	}
}

void Phonebook::show() {
	if (phonebook.empty()) {
		cout << "전화번호부에 저장된 번호가 없습니다." << endl;
	}
	else {
		cout << "    이  름      " << "     전 화 번 호" << endl <<endl;
		for (it = phonebook.begin(); it != phonebook.end(); it++) {
			cout << "    " << it->first << "          " << it->second << endl;
		}
	}
	
}

void Phonebook::showr() {
	cout << endl << "검색하시고 싶은 사람들과 사용자와의 관계를 입력하세요 (가족, 친구, 동료, 없음 중 하나를 선택하세요)" << endl;
	cin >> r;
	while (r != "가족" && r != "친구" && r != "동료" && r != "없음") {
		cout << "잘못 입력하셨습니다." << endl;
		cout << "검색하시고 싶은 사람들과 사용자와의 관계를 입력하세요 (가족, 친구, 동료, 없음 중 하나를 선택하세요)" << endl;
		cin >> r;
	}
	cout << "   관  계       " << "   이  름" << endl << endl;
	for (it2 = relationship.begin(); it2 != relationship.end(); it2++) {
		if (it2->second == r) {
			cout << "    " << it2->second << "           " << it2->first << endl;
		}
	}
}

void Phonebook::showb() {
	if (banbook.empty()) {
		cout << "차단된 번호가 없습니다." << endl;
	}
	else {
		cout << "    이  름      " << "     전 화 번 호" << endl << endl;
		for (it3 = banbook.begin(); it3 != banbook.end(); it3++) {
			cout << "    " << it3->first << "          " << it3->second << endl;
		}
	}
}


void Phonebook::plusban() {
	cout << endl << "차단하고 싶으신 번호의 이름을 입력하세요." << endl;
	cin >> name;
	if (banbook.find(name) == banbook.end()) {
		number = phonebook[name];
		banbook.insert(make_pair(name, number));
		phonebook.erase(name);
		cout << name << " 님을 차단했습니다." << endl << endl;
	}
	else
		cout << name << " 님의 전화번호가 전화번호부에 없습니다." << endl;
}

void Phonebook::minusban() {
	cout << endl << "차단을 풀고 싶으신 번호의 이름을 입력하세요." << endl;
	cin >> name;
	if (banbook.find(name) == banbook.end()) {
		if(phonebook.find(name)==phonebook.end())
			cout << name << " 님의 전화번호가 전화번호부에 없습니다." << endl;
		else
			cout << name << " 님은 차단되지 않았습니다." << endl;
	}
	else {
		number = banbook[name];
		phonebook.insert(make_pair(name, number));
		banbook.erase(name);
		cout << name << " 님의 차단을 풀었습니다." << endl << endl;
	}
}

int main() {

	Phonebook p;
	int a = 0;

	while (a != 11) {
		cout << endl << "전화번호부 기능 중 이용하고 싶은 기능을 선택하세요" << endl;
		cout << "1. 전화번호 추가" << endl << "2. 전화번호 검색" << endl << "3. 전화번호 삭제" << endl << "4. 전화번호 변경"
			<< endl << "5. 전화번호 전체 출력" << endl << "6. 사용자와의 관계를 기준으로 이름 출력"
			<< endl << "7. 주소 검색" << endl << "8. 전화번호 차단"<< endl << "9. 전화번호 차단 해제" 
			<< endl << "10. 차단된 번호 출력" << endl << "11. 전화번호부 종료" << endl << endl;
		cin >> a;
		
		if (a == 1)
			p.addp();
		else if (a == 2)
			p.search();
		else if (a == 3)
			p.pop();
		else if (a == 4)
			p.change();
		else if (a == 5)
			p.show();
		else if (a == 6)
			p.showr();
		else if (a == 7)
			p.searcha();
		else if (a == 8)
			p.plusban();
		else if (a == 9)
			p.minusban();
		else if (a == 10)
			p.showb();
		else if (a == 11)
			cout << "전화번호부를 종료합니다." << endl;
		else
			cout << "번호를 잘못 입력하셨습니다. 번호를 다시 입력해 주세요." << endl;
	}

	return 0;
}
